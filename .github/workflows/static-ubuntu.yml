name: Static Ubuntu Build

on: [push]

jobs:
  container:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: APT base deps
        run: |
          sudo apt-get update
          sudo apt-get install -y sbcl

      # CACHE
      - run: mkdir -pv ~/build
      - name: Get Current Month
        id: current-month
        run: echo "::set-output name=value::$(date -u '+%Y-%m')"
      - name: Cache SBCL 2.1.9 Setup
        id: cache
        uses: actions/cache@v2
        env:
          cache-name: cache-ubuntu-static-sbcl-2.1.9-nuke
        with:
          path: |
            ~/build
            ~/quicklisp
            ~/.cache/common-lisp
          key: "${{ steps.current-month.outputs.value }}-${{ env.cache-name }}-${{ runner.os }}"

      # BUILD
      - name: Build SBCL 2.1.9
        run: |
          export SBCL_ARCH=x86-64
          cd ~/build/
          git clone -b static-executable-v2-2.1.9 https://github.com/daewok/sbcl
          cd sbcl/
          git fetch
          sh make.sh --fancy --with-sb-linkable-runtime --with-sb-prelink-linkage-table
          mkdir -vp ~/build/binary
          INSTALL_ROOT=~/build/binary sh install.sh
        if: steps.cache.outputs.cache-hit != 'true'

      - name: First time Install quicklisp
        run: |
          cd ~/build/sbcl
          wget https://beta.quicklisp.org/quicklisp.lisp
          sh run-sbcl.sh --non-interactive \
               --eval '(load "quicklisp.lisp")' \
               --eval '(quicklisp-quickstart:install)' \
               --eval '(ql-util:without-prompting (ql:add-to-init-file))' \
               --eval '(ql:update-all-dists)' \
               --eval '(ql-dist:install-dist "http://bodge.borodust.org/dist/org.borodust.bodge.txt" :replace t :prompt nil)'
        if: steps.cache.outputs.cache-hit != 'true'

      # Step 0: gather deps
      - name: APT deps
        run: |
          sudo apt-get install -y --without-recommends libmagickwand-dev libsdl2-dev

      - name: Build SDL 2.0.12
        #if: steps.cache.outputs.cache-hit != 'true'
        run: |
          cd ~/build
          wget https://www.libsdl.org/release/SDL2-2.0.12.tar.gz
          tar xzf SDL2-2.0.12.tar.gz
          cd SDL2-2.0.12
          CFLAGS='-O0 -g' ./configure --prefix=/usr --disable-input-tslib --disable-video-vulkan
          make
      - name: Install SDL 2.0.12
        run: |
          sudo apt-get remove -y libsdl2-dev
          cd ~/build/SDL2-2.0.12
          make install

      - name: Build ImageMagick 6.9.12-28
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          cd ~/build
          wget https://mirror.dogado.de/imagemagick/ImageMagick-6.9.12-28.tar.gz
          tar xzf ImageMagick-6.9.12-28.tar.gz
          cd ImageMagick-6.9.12-28
          ./configure --with-png --enable-static --disable-openmp --prefix=/usr --with-threads  --without-magick-plus-plus --without-x --without-modules
          make -j1
      - name: Install ImageMagick 6.9.12-28
        run: |
          sudo apt-get remove -y libmagickwand-dev imagemagick
          cd ~/build/ImageMagick-6.9.12-28
          make install
          cd /usr/lib
          ls -l libMagickWan*

      - name: Get LISP deps
        run: |
          cd ~/quicklisp/local-projects/
          (test -d lisp-magick-wand) || git clone --depth=1 https://github.com/azimut/lisp-magick-wand/
          ( cd lisp-magick-wand/ ; git pull )
          (test -d cl-opengl) || git clone -b skipgl --depth=1 https://github.com/azimut/cl-opengl/
          ( cd cl-opengl/ ; git pull )
          (test -d cffi) || git clone -b pr/reload-on-restart --depth=1 https://github.com/ralt/cffi/
          ( cd cffi/ ; git pull )
          (test -d cl-sdl2) || git clone --depth=1 https://github.com/azimut/cl-sdl2/
          ( cd cl-sdl2/ ; git pull )

      - name: STEP 1 - Dump .core and .sexp
        run: |
          cd ~/build/sbcl
          sh run-sbcl.sh --non-interactive \
            --load ~/quicklisp/setup.lisp \
            --eval '(push :skipgl *features*)' \
            --eval '(ql:quickload :deploy)' \
            --eval '(require :asdf)' \
            --load "$RUNNER_WORKSPACE"/water/water.asd \
            --eval '(ql:quickload :water)' \
            --eval '(pop uiop:*image-restore-hook*)' \
            --load tools-for-build/dump-linkage-info.lisp \
            --eval '(sb-dump-linkage-info:dump-to-file "/tmp/linkage-info.sexp")' \
            --eval '(sb-ext:save-lisp-and-die "/tmp/sb-gmp-tester.core")'
          ls -l /tmp

      - name: STEP 2 - Compile .o and static-sbcl
        run: |
          cd ~/build/sbcl
          sh run-sbcl.sh --script tools-for-build/create-linkage-table-prelink-info-override.lisp \
              /tmp/linkage-info.sexp \
              /tmp/linkage-table-prelink-info-override.c
          ls -l /tmp
          while read l; do \
            echo "$l"; eval "export ${l%%=*}=\"${l#*=}\""; \
          done < ~/build/binary/lib/sbcl/sbcl.mk
          env | sort
          set -x
          $CC $CFLAGS $(sdl2-config --cflags) -Wno-builtin-declaration-mismatch \
              -o /tmp/linkage-table-prelink-info-override.o \
              -c /tmp/linkage-table-prelink-info-override.c
          $CC -no-pie -static $LINKFLAGS \
              -o /tmp/static-sbcl \
              ~/build/binary/lib/sbcl/$LIBSBCL \
              /tmp/linkage-table-prelink-info-override.o \
              $(pkg-config --libs --static MagickWand) \
              $(sdl2-config --static-libs) \
              $LIBS
              #-lpng16 -lz -lzstd -ltiff -ljpeg -lwebp -llcms2 -llzma -lxml2 -lfontconfig -lfreetype -lbz2 -lexpat
          ls -l /tmp
      - name: STEP 3 - Run static-sbcl, with .core, and dump final binary
        run: |
          /tmp/static-sbcl \
            --core /tmp/sb-gmp-tester.core \
            --non-interactive \
            --eval '(sb-ext:save-lisp-and-die "/tmp/sb-gmp-tester" :executable t :toplevel (lambda () (water:start)) :compression t)'
          ls -l /tmp

      - uses: actions/upload-artifact@v2
        with:
          name: sbcl-static-ubuntu-gmp
          path: |
            /tmp
          if-no-files-found: error

      - name: DEBUG SHELL
        uses: mxschmitt/action-tmate@v3
        #uses: seemethere/action-tmate@skip_dependency_installation
        # if: ${{ failure() }}
        # with:
        #   install_dependencies: false
        #   sudo: false

